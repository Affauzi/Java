#BlueJ class context
comment0.params=
comment0.target=MailServer()
comment0.text=\n\ Construct\ a\ mail\ server.\n
comment1.params=user
comment1.target=int\ createMailbox(java.lang.String)
comment1.text=\n\ Create\ a\ mailbox\ for\ a\ single\ user\n\ @param\ \ the\ name\ of\ the\ new\ user\n\ @return\ 1\ if\ the\ creation\ succeeded\n\ \ \ \ \ \ \ \ \ 0\ if\ a\ mailbox\ with\ that\ name\ already\ existed\n
comment2.params=users
comment2.target=int\ createMailbox(java.lang.String[])
comment2.text=\n\ Create\ mailboxes\ for\ users\n\ @param\ \ an\ array\ containing\ the\ names\ of\ the\ new\ users\n\ @return\ the\ number\ of\ successfully\ created\ mailboxes,\n\ \ \ \ \ \ \ \ \ this\ number\ will\ be\ less\ than\ the\ number\ of\n\ \ \ \ \ \ \ \ \ specified\ users\ if\ some\ mailboxes\ already\ existed\n
comment3.params=who
comment3.target=MailItem\ getNextMailItem(java.lang.String)
comment3.text=\n\ Return\ the\ next\ mail\ item\ for\ a\ user\ or\ null\ if\ there\n\ are\ none.\n\ @param\ who\ The\ user\ requesting\ their\ next\ item.\n\ @return\ The\ user's\ next\ item.\n
comment4.params=who
comment4.target=java.util.List\ getMailbox(java.lang.String)
comment4.text=\n\ Retrieves\ the\ mailbox\ for\ a\ user\n\n\ @param\ \ \ who\ the\ owner\ of\ the\ requested\ mailbox\n\ @return\ \ the\ mailbox\ belonging\ to\ who,\n\ \ \ \ \ \ \ \ \ \ null\ if\ it\ does\ not\ exist\n
comment5.params=who
comment5.target=int\ howManyMailItems(java.lang.String)
comment5.text=\n\ Return\ how\ many\ mail\ items\ are\ waiting\ for\ a\ user.\n\ @param\ who\ The\ user\ to\ check\ for.\n\ @return\ How\ many\ items\ are\ waiting.\n
comment6.params=
comment6.target=int\ howManyMessages()
comment6.text=\n\ Return\ the\ number\ of\ messages\ on\ the\ server\n\ @return\ number\ of\ messages\ on\ the\ server\n
comment7.params=item
comment7.target=void\ post(MailItem)
comment7.text=\n\ Add\ the\ given\ mail\ item\ to\ the\ message\ list.\n\ @param\ item\ The\ mail\ item\ to\ be\ stored\ on\ the\ server.\n
comment8.params=item
comment8.target=boolean\ isValidMessage(MailItem)
comment8.text=\n\ Checks\ the\ to\ and\ from\ fields\ to\ see\ if\ they\ are\ empty\n\ @param\ item\ The\ mail\ item\ to\ be\ checked\n\ @return\ True\ if\ the\ to\ and\ from\ fields\ are\ filled\ in\n
numComments=9
